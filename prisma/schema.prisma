// remember to run: npx prisma generate
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String
  password      String
  refreshTokens RefreshToken[]

  @@unique(fields: [email, password], name: "unique")
}

model RefreshToken {
  id          String  @id @unique @default(uuid())
  hashedToken String
  userId      Int
  revoked     Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_token")
}

model EndPoint {
  id   Int    @id @default(autoincrement())
  name String

  fsp Trip? @relation("from")
  tsp Trip? @relation("to")

  @@map("end_point")
}

model Trip {
  id         Int        @id @default(autoincrement())
  fromId     Int        @unique
  toId       Int        @unique
  distance   Int
  travelTime Int
  price      Int
  from       EndPoint   @relation("from", fields: [fromId], references: [id])
  to         EndPoint   @relation("to", fields: [toId], references: [id])
  Schedule   Schedule[]
}

model Schedule {
  id        Int        @id @default(autoincrement())
  title     String
  date      DateTime?
  start     DateTime
  end       DateTime
  cron      String
  cronType  String     @default("Daily")
  note      String
  tripId    Int
  trip      Trip       @relation(fields: [tripId], references: [id])
  BusAssign BusAssign?
}

model DayOff {
  scheduleId Int
  date       DateTime

  @@unique(fields: [scheduleId, date], name: "unique")
  @@map("day_of")
}

model Bus {
  id        String      @id
  layoutId  String      @default("Standard")
  BusAssign BusAssign[]
}

model SeatOnLayout {
  id       String
  layoutId String

  @@unique(fields: [id, layoutId], name: "unique")
  @@map("seat_on_layout")
}

model BusAssign {
  busId      String
  scheduleId Int
  bus        Bus      @relation(fields: [busId], references: [id])
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  @@unique(fields: [scheduleId], name: "unique")
  @@map("bus_assign")
}

model Ticket {
  id         Int      @id @default(autoincrement())
  scheduleId Int
  date       DateTime
  seatId     String
  userId     Int
  price      Int

  @@unique(fields: [scheduleId, date, seatId], name: "unique")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}
